#include <bits/stdc++.h>
using namespace std;
 
#define int long long int
 
class ST{
	vector<int> st;
public:
	ST(int n){
		st.resize(4*n);
	}
 
	void build(int ind,int low,int high,int a[]){
		if(low==high){
			st[ind]=a[low];
			return;
		}
		int mid=(low+high)/2;
		build(2*ind+1,low,mid,a);
		build(2*ind+2,mid+1,high,a);
		st[ind]=min(st[2*ind+1],st[2*ind+2]);
	}
 
	void update(int ind,int low,int high,int i,int val){
		if(low==high){
			st[ind]=val;
			return;
		}
		int mid=(low+high)/2;
		if(i<=mid){
			update(2*ind+1,low,mid,i,val);
		}
		else{
			update(2*ind+2,mid+1,high,i,val);
		}
		st[ind]=min(st[2*ind+1],st[2*ind+2]);
	}
 
	int query(int ind,int low,int high,int l,int r){
		if(high<l or r<low){
			return INT_MAX;
		}
		if(low>=l and high<=r){
			return st[ind];
		}
		int mid=(low+high)/2;
		int left=query(2*ind+1,low,mid,l,r);
		int right=query(2*ind+2,mid+1,high,l,r);
		return min(left,right);
	}
};
 
int32_t main(){
 
	// #ifndef ONLINE_JUDGE
	// freopen("input.txt","r",stdin);
	// freopen("output.txt","w",stdout);
	// #endif
 
	int n,q; cin>>n>>q;
	int a[n];
	for(int i=0;i<n;i++){
		cin>>a[i];
	}
	ST st(n);
	st.build(0,0,n-1,a);
	while(q--){
		int type; cin>>type;
		if(type==1){
			int i,v; cin>>i>>v;
			st.update(0,0,n-1,i,v);
		}
		else{
			int l,r; cin>>l>>r;
			cout<<st.query(0,0,n-1,l,r-1)<<endl;
		}
	}
 
	return 0;
 
}
